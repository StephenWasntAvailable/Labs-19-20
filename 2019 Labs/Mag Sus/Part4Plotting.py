# -*- coding: utf-8 -*-
import numpy as np
import scipy as sp  
import matplotlib.pyplot as plt

y1= np.array([])

y = np.array([0.122484777895206,
0.178179849003352,
0.239890918658172,
0.293695252106388,
0.314652977818769,
0.335852657615364,
0.356704339880985,
0.372557866097918,
0.41023225705164,
0.397786194038407,
0.40850643212491,
0.408380737838102,
0.420221927295824,
0.421921783355892,
0.426037222027535,
0.430878840463713,
0.429288268435555,
0.410947903822294,
0.402254507598477,
0.393979943398548,
0.384200299413478,
0.366450360096313,
0.355329756682985,
0.335648108465926,
0.309103659561848,
0.277863195123122,
0.246306447856835,
0.20224569873887,
0.138528558661761,
0.053956656469354,
-0.080917545577828,
-0.304820072261933,
-0.81524427169662,
-5.96092585756669,
1.86278933048959,
0.663026710852227,
0.28094527607384,
0.090499886501519,
-0.05031328095213,
-0.125850646456669,
-0.185420504786061,
-0.233134370196243,
-0.253366592666226,
-0.287348471013753,
-0.307489799839703,
-0.330442629060762,
-0.337758504978882,
-0.353414576535574,
-0.355042439102209,
-0.365684104730798,
-0.369434626501887,
-0.363381563977279,
-0.360265347673367,
-0.352023180564962,
-0.339430285665134,
-0.326655320991298,
-0.293457249470969,
-0.258829675394343,
-0.228272449747857,
-0.183067227306735,
-0.137984394851081,
-0.051984818525291,
0.055684805608942,
0.227674251504283,
0.54413056759038,
1.27362805386963,
6.59427422993315,
-2.8184812478712,
-1.02705141464831,
-0.45984285186943,
-0.243175845653871,
-0.096543234404112,
0,
0.073983122345686,
0.139709199786719,
0.183498650466139,
0.21289020919881,
0.242895994589824,
0.264147379212704,
0.284498734111137,
0.308220563920366,
0.317275085967259,
0.332092779517994,
0.33638719948647
])
x = np.array([0.073,
0.138,
0.205,
0.274,
0.341,
0.406,
0.47,
0.528,
0.534,
0.635,
0.684,
0.728,
0.766,
0.8,
0.829,
0.856,
0.88,
0.854,
0.828,
0.8,
0.768,
0.732,
0.692,
0.646,
0.593,
0.539,
0.481,
0.42,
0.355,
0.29,
0.221,
0.154,
0.085,
0.015,
-0.054,
-0.118,
-0.183,
-0.247,
-0.311,
-0.373,
-0.434,
-0.489,
-0.547,
-0.599,
-0.647,
-0.69,
-0.728,
-0.759,
-0.787,
-0.813,
-0.835,
-0.812,
-0.788,
-0.762,
-0.731,
-0.698,
-0.617,
-0.57,
-0.519,
-0.464,
-0.405,
-0.344,
-0.281,
-0.216,
-0.152,
-0.086,
-0.02,
0.046,
0.111,
0.175,
0.239,
0.301,
0.362,
0.423,
0.48,
0.536,
0.588,
0.635,
0.677,
0.715,
0.747,
0.775,
0.801,
0.824
])

plt.plot(x, y, 'bx', label = 'Data')
#plt.xlim(-1,1)
#plt.ylim(-1, 1)

y_err = np.array([])
x_err = np.array([])
#plt.errorbar( x, y, xerr =  x_err, yerr = y_err, fmt = 'o', label = 'Error')


#p = np.polyfit( x, y, 1)
#print(p)
#slope = p[0]
#intercept = p[1]
#y_model = slope * x + intercept
#plt.plot(x, y_model, 'r', label = 'Fit')


plt.ylabel("Sigma (J / T Kg)")
plt.xlabel("Magnetic Field (T)")
plt.title("Magnetisation vs Magnetic Field", pad = 20)
plt.legend(loc = 'upper left')
plt.grid()
plt.tick_params(axis = 'both', which = 'both', right = True, top = True, labeltop = True, labelright = True)



#n = len( x )
#s_x = sum( x )
#s_y = sum( y )
#s_xx = sum( x**2)
#s_xy = sum( x*y)
#denom = n * s_xx - s_x**2
#c = ( s_xx * s_y - s_x * s_xy) / denom
#m = ( n * s_xy - s_x * s_y ) /denom

#sigma = np.sqrt(sum( ( y -( c + m*x))**2) / (n - 2))
#sigma_c = np.sqrt( sigma**2 * s_xx / denom )
#sigma_m = np.sqrt( sigma**2 * n /denom )

#print('Slope (m):', m, '+-', sigma_m)
#print('Intercept (c):', c, '+-', sigma_c)  
