# -*- coding: utf-8 -*-
import numpy as np
import scipy as sp  
import matplotlib.pyplot as plt

y1= np.array([])

y = np.array([0.054,
0.125,
0.198,
0.269,
0.305,
0.34,
0.409,
0.477,
0.54,
0.601,
0.657,
0.706,
0.75,
0.787,
0.82,
0.85,
0.876,
0.901,
0.873,
0.847,
0.819,
0.787,
0.751,
0.712,
0.666,
0.616,
0.559,
0.499,
0.437,
0.369,
0.3,
0.228,
0.1576,
0.0861,
0.01617,
-0.0553,
-0.1265,
-0.179,
-0.2664,
-0.366,
-0.402,
-0.468,
-0.531,
-0.59,
-0.646,
-0.696,
-0.742,
-0.78,
-0.814,
-0.844,
-0.87,
-0.895,
-0.869,
-0.844,
-0.815,
-0.783,
-0.748,
-0.708,
-0.662,
-0.61,
-0.556,
-0.496,
-0.435,
-0.369,
-0.302,
-0.232,
-0.162,
-0.092,
-0.02
])
x = np.array([0.52,
1.04,
1.57,
2.09,
2.36,
2.62,
3.15,
3.68,
4.21,
4.73,
5.26,
5.77,
6.29,
6.8,
7.32,
7.84,
8.34,
8.86,
8.25,
7.71,
7.19,
6.66,
6.14,
5.63,
5.11,
4.61,
4.09,
3.57,
3.06,
2.54,
2.03,
1.52,
1.01,
0.5,
0,
-0.51,
-1.02,
-1.53,
-2.05,
-2.55,
-3.06,
-3.57,
-4.08,
-4.6,
-5.11,
-5.62,
-6.13,
-6.64,
-7.15,
-7.65,
-8.13,
-8.64,
-8.06,
-7.55,
-7.04,
-6.52,
-6.01,
-5.51,
-5.02,
-4.51,
-4.01,
-3.5,
-3,
-2.5,
-2.01,
-1.5,
-1,
-0.5,
0
])

plt.plot(x, y, 'bx', label = 'Data')
#plt.xlim(-1,1)
#plt.ylim(-1, 1)

y_err = np.array([0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.0001,
0.0001,
1E-05,
0.0001,
0.0001,
0.0001,
0.0001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001,
0.001
])
x_err = np.array([0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01,
0.01
])
plt.errorbar( x, y, xerr =  x_err, yerr = y_err, fmt = '.', label = 'Error')


#p = np.polyfit( x, y, 1)
#print(p)
#slope = p[0]
#intercept = p[1]
#y_model = slope * x + intercept
#plt.plot(x, y_model, 'r', label = 'Fit')


plt.xlabel("Current (A)")
plt.ylabel("Magnetic Field (T)")
plt.title("Field Calibration - Field against Current", pad = 20)
plt.legend(loc = 'upper left')
plt.grid()
plt.tick_params(axis = 'both', which = 'both', right = True, top = True, labeltop = True, labelright = True)


#n = len( x )
#s_x = sum( x )
#s_y = sum( y )
#s_xx = sum( x**2)
#s_xy = sum( x*y)
#denom = n * s_xx - s_x**2
#c = ( s_xx * s_y - s_x * s_xy) / denom
#m = ( n * s_xy - s_x * s_y ) /denom

#sigma = np.sqrt(sum( ( y -( c + m*x))**2) / (n - 2))
#sigma_c = np.sqrt( sigma**2 * s_xx / denom )
#sigma_m = np.sqrt( sigma**2 * n /denom )

#print('Slope (m):', m, '+-', sigma_m)
#print('Intercept (c):', c, '+-', sigma_c)  
